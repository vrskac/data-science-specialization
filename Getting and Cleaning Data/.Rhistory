fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
file <- download.file(fileUrl)
file <- download.file(fileUrl, "\")
file <- download.file(fileUrl, "\data")
?download.file
file.path("\")
getwd()
file <- download.file(fileUrl, getwd())
file <- download.file(fileUrl, "./")
file <- download.file(fileUrl, "./quiz1/q1.csv")
file.path("quiz1", "q1.csv")
filePath <- file.path("quiz1", "q1.csv")
file <- download.file(fileUrl, filePath)
file <- download.file(fileUrl, filePath)
head(file)
data <- read.csv(file)
data <- read.csv(filePath)
head(data)
str(data)
data[,data$VAL]
data[,data$VAL]
data[,data$VAL]
data[data$VAL]
data[data$VAL]
data[data$VAL]
data[data$ VAL]
data[data$VAL]
data["VAL"]
data["VAL" == 24]
data["VAL" == 24]
data[data$VAL == 24, "VAL"]
na.omit(data[data$VAL == 24, "VAL"])
data[data$VAL == 24 & !is.na(VAL), "VAL"]
data["VAL" == 24 & !is.na(VAL), "VAL"]
data["VAL" == 24 & !is.na("VAL"), "VAL"]
data <- data["VAL" == 24, "VAL"]
data <- read.csv(filePath)
data2 <- data[, "VAL"]
head(data2)
str(data2)
data2 <- data2[complete.cases(data2),]
data2 <- data2[complete.cases(data2),]
complete.cases(data2)
l<-complete.cases(data2)
data2 <- data2[l,]
data2 <- na.omit(data2)
length(data2)
length(data2 == 24)
length(data2 %in% 24)
length(data2)
which(data2 == 24)
length(which(data2 == 24))
data2 <- data["FES"]
head(data2, 25)
str(fes)
str(data2)
filePath <- file.path("quiz1", "q3.xlsx")
file.path
filePath
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", filePath)
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
data <- read.xlsx()
library(xlsx)
library(xlsx)
install.packages(xlsx)
install.packages("xlsx)
install.packages("xlsx")
library("xlsx", lib.loc="~/R/win-library/3.2")
library(xlsx)
library(xlsx)
Sys.getenv("JAVA_HOME")
library(xlsx)
library(xlsx)
data <- read.xlsx(filePath, 1)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", filePath)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "30aa59317db4af04716a",
secret = "2a15be85f9eb176206faaf3fa29482aef32f9d3a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
stop_for_status(req)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "30aa59317db4af04716a",
secret = "2a15be85f9eb176206faaf3fa29482aef32f9d3a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
myapp <- oauth_app("github",
key = "30aa59317db4af04716a",
secret = "6f02d0df0940da51a64848a29245bf46c6fea63d")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
library(httpuv)
myapp <- oauth_app("github",
key = "30aa59317db4af04716a",
secret = "6f02d0df0940da51a64848a29245bf46c6fea63d")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
test <- GET("https://api.github.com/users/jtleek/repos", github_token)
test
dim(test)
print(test)
install.packages("jsonlite")
library(jsonlite)
test2 <- toJSON(test)
test2 <- fromJSON("https://api.github.com/users/jtleek/repos")
test2
names(test2)
class(test2)
test2 <- test2[test2$name = "datasharing"]
test2 <- test2[test2$name == "datasharing"]
test2
names(test2)
test2 <- fromJSON("https://api.github.com/users/jtleek/repos")
test3 <- test2[,test2$name == "datasharing"]
test3
test3 <- test2[test2$name == "datasharing",]
names(test3)
test3[test3$created_at]
test3[,test3$created_at]
test3["created_at"]
getwd()
filepath <- file.path("quiz2", "getdata-data-ss06pid.csv")
filepath
acs <- read.csv(filepath)
acs
library(sqldf)
install.packages("sqldf")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
head(sqldf("select pwgtp1 from acs where AGEP < 50"))
one <- unique(acs$AGEP)
two <- sqldf("select distinct AGEP from acs")
identical(one, two)
one
two
class(two)
class(ome)
class(one)
identical(one, as.vector(two))
as.vector(two)
as.integer(as.vector(two))
as.vector(two)
as.vector(two$AGEP)
identical(one, as.vector(two$AGEP))
html <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
html
library(XML)
install.packages("XML")
library(XML)
htmlParse("http://biostat.jhsph.edu/~jleek/contact.html")
html <- htmlParse("http://biostat.jhsph.edu/~jleek/contact.html")
html
capture.output(html)
nchar(html[10])
html[10]
test <- capture.output(html)
test
test[10]
nchar(test[10])
htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html")
html <- htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html")
html
capture.output(html)
html
html$children$html
out <- capture.output(html$children$html)
head(out)
out[10]
nchar(out[10])
?nchar
nchar(out[10], keepNA = TRUE)
htmlParse("http://biostat.jhsph.edu/~jleek/contact.html")
?"htmlParse"
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
doc <- htmlParse(url)
head(doc, 10)
rootdoc <- xmlRoot(doc)
rootdoc
xmlSApply(rootdoc)
xmlSApply(rootdoc, xmlValue)
rootdoc[[1]]
rootdoc[1
]
rootdoc
xmlApply(rootdoc, xmlValue)
doc
content.output(doc)
capture.output(doc)
?capture.output
capture.output(url)
con <- url(url)
readLines(con)
rm(con)
rm(doc)
rm(rootdoc)
h <- htmlParse(url, aasText = TRUE)
h <- htmlParse(url, asText = TRUE)
h
h <- htmlParse(url)
h
xmlToList(h)
xpathApply(h, "/", xmlValue)
xpathApply(h, "/")
xpathApply(h, "//")
readLines(url)
r <- readLines(url)
r[10]
nchar(r[10])
nchar(r[20])
nchar(r[30])
nchar(r[100])
filepath <- file.path("quiz2", "getdata-wksst8110.for")
read.fortran(filepath)
x <- read.fwf(filepath)
x <- read.fwf(filepath, skip = 4)
readLines(filepath)
head(readLines(filepath))
?readLines
?read.fwf
head(read.fwf(filepath, widths = c(), header = TRUE, skip = 2))
head(read.fwf(filepath, widths = c(1, 10), header = TRUE, skip = 2))
head(read.fwf(filepath, widths = c(1, 10), header = TRUE, skip = 2, row.names = NULL))
head(read.fwf(filepath, widths = c(1, 10), header = FALSE, skip = 3, row.names = NULL))
head(read.fwf(filepath, widths = c(1, 9), header = FALSE, skip = 3, row.names = NULL))
head(read.fwf(filepath, widths = c(2, 9), header = FALSE, skip = 3, row.names = NULL))
head(read.fwf(filepath, widths = c(2, 10), header = FALSE, skip = 3, row.names = NULL))
head(read.fwf(filepath, widths = c(2, 11), header = FALSE, skip = 3, row.names = NULL))
head(read.fwf(filepath, widths = c(2, 12), header = FALSE, skip = 3, row.names = NULL))
head(read.fwf(filepath, widths = c(10), header = FALSE, skip = 3, row.names = NULL))
head(read.fwf(filepath, widths = c(10), header = FALSE, skip = 4, row.names = NULL, col.names = c("Week","Nino1+2","Nino3","Nino34","Nino4")))
head(read.fwf(filepath, widths = c(10,13,13,13,13), header = FALSE, skip = 4, row.names = NULL, col.names = c("Week","Nino1+2","Nino3","Nino34","Nino4")))
head(read.fwf(filepath, widths = c(10,13,13,13,13), header = FALSE, skip = 4, row.names = NULL, col.names = c("Week","Nino1plus2","Nino3","Nino34","Nino4")))
head(read.fwf(filepath, widths = c(10,9,4,9,4,9,4,9,4), header = FALSE, skip = 4, row.names = NULL))
data <- read.fwf(filepath, widths = c(10,9,4,9,4,9,4,9,4), header = FALSE, skip = 4, row.names = NULL)
data[1,]
data[1,3]
sum(data[data$V4])
sum(data[,data$V4])
sum(data[$V4])
sum(data[,$V4])
sum(data["V4"])
swirl()
library(swirl)
rm(list=ls())
swirl()
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_pack`
by_package
by_package
summarize(by_package, mean(size))
?n
?n_distinct
source('C:/Users/CHUMTO~1/AppData/Local/Temp/RtmpK6jsDd/summarize1.R')
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
view(top_counts)
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View()
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique()))
top_unique_sorted <- arrange(top_unique, desc(unique)
)
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
source('C:/Users/CHUMTO~1/AppData/Local/Temp/RtmpK6jsDd/chain1.R')
submit()
source('C:/Users/CHUMTO~1/AppData/Local/Temp/RtmpK6jsDd/chain2.R')
source('C:/Users/CHUMTO~1/AppData/Local/Temp/RtmpK6jsDd/chain2.R')
submit()
source('C:/Users/CHUMTO~1/AppData/Local/Temp/RtmpK6jsDd/chain3.R')
submit()
submit()
